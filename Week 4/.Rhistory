setwd("C:/Users/bcong/Desktop/Uni Materials/NM2207 Computational Media Literacy/Week 4")
library(tidyverse)
names(hotels)
hotels <- read_csv("hotels.csv")
names(hotels)
glimpse(hotels)
# Enter code here
select(hotels, lead_time)
select(hotels, lead_time)
select(hotels, lead_time, agent, market_segment)
arrange(hotels, lead_time)
arrange(hotels, desc(lead_time))
arrange(select(hotels, lead_time), desc(lead_time))
hotels %>% select(lead_time) %>% arrange(desc(lead_time))
hotels %>% filter(children >= 1) %>% select(hotel, children)
hotels %>% filter(children >= 1, hotel == "City Hotel") %>% select(hotel, children)
hotels %>% slice(1:5)
hotels %>% slice(1,3,5)
hotels %>% slice(1,3,5)
hotels %>% distinct(hotel)
hotels %>% mutate(little_ones = children + babies) %>%
select(hotel, little_ones, children, babies)
hotels %>% mutate(little_ones = children + babies,
average_little_ones = mean(little_ones)) %>%
select(hotel, little_ones, children, babies)
hotels %>%
mutate(little_ones = children + babies,
average_little_ones = mean(little_ones)) %>%
select(hotel, little_ones, children, babies, average_little_ones)
hotels %>%
count(market_segment)
hotels %>%
count(market_segment, sort = TRUE)
hotels %>%
count(market_segment)
hotels %>%
count(market_segment, sort = TRUE)
hotels %>%
count(hotel, market_segment)
hotels %>%
summarise(mean_adr = mean(adr))
hotels %>%
group_by(hotel) %>%
summarise(mean_adr = mean(adr))
hotels %>%
group_by(hotel) %>%
summarise(count = n())
?n
hotels %>%
group_by(hotel) %>%
summarise(count)
hotels %>%
summarise(
min_adr = min(adr),
mean_adr = mean(adr),
median_adr = median(adr),
max_adr = max(adr)
)
hotels %>%
select(hotel, lead_time) %>%
slice(1:5) %>%
arrange(lead_time)
hotels %>%
select(hotel, lead_time) %>%
arrange(lead_time) %>%
slice(1:5)
hotels %>%
filter(
adults == 0,
children >= 1
) %>%
select(adutls, babies, children)
hotels %>%
filter(
adults == 0,
children >= 1
) %>%
select(adults, babies, children)
hotels %>%
filter(adults == 1,
children >= 1 | babies >= 1) %>%
select(adults, babies, children)
hotels %>%
count(market_segment) %>%
arrang(desc(n))
hotels %>%
count(market_segment) %>%
arrange(desc(n))
hotel %>%
mutate(little_ones = children + babies) %>%
select(children, babies, little_ones) %>%
arrange(desc(little_ones))
hotels %>%
mutate(little_ones = children + babies) %>%
select(children, babies, little_ones) %>%
arrange(desc(little_ones))
hotels %>%
mutate(little_ones = children + babies) %>%
filter(
little_ones >= 1,
hotel == "Resort Hotel"
) %>%
select(hotel, little_ones)
hotels %>%
mutate(little_ones = children + babies) %>%
filter(
little_ones >= 1,
hotel == "City Hotel"
) %>%
select(hotel, little_ones)
setwd("C:/Users/bcong/Desktop/Uni Materials/NM2207 Computational Media Literacy/Week 4")
library(tidyverse)
comm_data <- read_csv("CommQuest2023.csv")
comm_data <- read_csv("CommQuest2023_Larger.csv")
View(hotels)
View(comm_data)
select(comm_data, date, channel, message)
comm_data %>%
filter(channel == "Twitter") %>%
select(message)
comm_data %>%
filter(
date == "2023-08-02",
channel == "Twitter"
) %>%
select(date, channel, message)
View(comm_data)
comm_data %>%
filter(
date == "2023-08-02",
channel == "Twitter"
) %>%
select(date, channel, message)
comm_data %>%
arrange(date)
comm_data %>%
distinct(sender)
comm_data %>%
group_by(sender) %>%
count(message)
comm_data %>%
group_by(sender) %>%
count(n())
comm_data %>%
group_by(sender) %>%
count()
comm_data %>%
count(sender)
comm_data %>%
group_by(channel) %>%
count()
comm_data %>%
filter(
sentiment > 0
) %>%
arrange(
desc(sentiment)
) %>%
select(
sender, sentiment
) %>%
slice(1:3)
comm_data %>% filter(sentiment > 0)
comm_data
comm_data %>% filter(sentiment > 0) %>% arrange(desc(sentiment))
comm_data %>%
filter(
sentiment > 0
) %>%
mutate(
ave_positive_sentiment = mean(sentiment)
) %>%
arrange(
desc(ave_positive_sentiment)
) %>%
select(
sender, ave_positive_sentiment
)
comm_data %>% group_by(sender)
comm_data
comm_data %>%
filter(
sentiment > 0
) %>%
select(
sender, sentiment
) %>%
arrange(
desc(mean(sentiment))
)
comm_data %>%
filter(
sentiment > 0
) %>%
select(
sender, sentiment
) %>%
arrange(
desc(sentiment)
)
comm_data %>%
group_by(sender) %>%
filter(sentiment > 0) %>%
summarise(mean_sentiment = mean(sentiment)) %>%
select(sender, sentiment)
comm_data %>%
group_by(sender) %>%
filter(sentiment > 0) %>%
summarise(mean_sentiment = mean(sentiment)) %>%
select(sender, mean_sentiment)
comm_data %>%
group_by(sender) %>%
filter(sentiment > 0) %>%
summarise(mean_sentiment = mean(sentiment)) %>%
select(sender, mean_sentiment) %>%
arrange(mean_sentiment)
comm_data %>%
group_by(sender) %>%
filter(sentiment > 0) %>%
summarise(mean_sentiment = mean(sentiment)) %>%
select(sender, mean_sentiment) %>%
arrange(desc(mean_sentiment))
comm_data %>%
filter(sentiment > 0) %>%
summarise(mean_sentiment = mean(sentiment)) %>%
select(sender, mean_sentiment) %>%
arrange(desc(mean_sentiment))
comm_data %>%
group_by(sender) %>%
filter(sentiment > 0) %>%
summarise(mean_sentiment = mean(sentiment)) %>%
select(sender, mean_sentiment) %>%
arrange(desc(mean_sentiment))
comm_data %>%
filter(sender == "dave@example", sentiment > 0) %>%
summarise(mean_sentiment = mean(sentiment)) %>%
select(sender, mean_sentiment)
comm_data %>%
filter(sender == "dave@example", sentiment > 0) %>%
summarise(mean_sentiment = mean(sentiment)) %>%
select(mean_sentiment)
comm_data %>%
filter(sender == "@frank_chat", sentiment > 0) %>%
summarise(mean_sentiment = mean(sentiment)) %>%
select(mean_sentiment)
comm_data %>%
filter(sender == "alice@example", sentiment > 0) %>%
summarise(mean_sentiment = mean(sentiment)) %>%
select(mean_sentiment)
comm_data %>%
filter(sender == "@erin_tweets", sentiment > 0) %>%
summarise(mean_sentiment = mean(sentiment)) %>%
select(mean_sentiment)
comm_data %>%
group_by(sender) %>%
filter(sentiment > 0) %>%
summarise(mean_sentiment = mean(sentiment)) %>%
select(sender, mean_sentiment) %>%
arrange(desc(mean_sentiment))
comm_data %>%
group_by(sender) %>%
filter(sentiment > 0) %>%
summarise(mean_sentiment = mean(sentiment)) %>%
select(sender, mean_sentiment) %>%
arrange(desc(mean_sentiment)) %>%
slice(1:3)
comm_data
comm_data %>%
group_by(date) %>%
summarise(mean_sentiment = mean(sentiment)) %>%
arrange(date)
comm_data %>%
group_by(date) %>%
summarise(mean_sentiment = mean(sentiment))
comm_data %>% group_by(date)
comm_data %>% group_by(date) %>% summarise(mean_sentiment = mean(sentiment))
comm_data %>% group_by(date) %>% summarise(mean_sentiment = mean(sentiment)) %>% arrange(date)
comm_data %>% group_by(date) %>% summarise(mean_sentiment = mean(sentiment)) %>% arrange(mean_sentiment)
comm_data %>% group_by(date) %>% summarise(mean_sentiment = mean(sentiment)) %>% arrange(date)
comm_data %>% group_by(date) %>% summarise(mean_sentiment = mean(sentiment)) %>% arrange(desc(date))
comm_data %>%
filter(sentiment < 0) %>%
select(message, sentiment)
comm_data %>%
filter(sentiment < 0)
comm_data %>%
mutate(sentiment_label = c("Positive","Neutral","Negative"))
?mutate
comm_data %>%
mutate(sentiment_label = (sentiment > 0 = "Positive" | sentiment == 0 = "Neutral" | sentiment < 0 = "Negative"))
sentiment>0
comm_data %>% sentiment>0
comm_data %>% filter(sentiment >0) mutate(sentiment_label = "Positive")
comm_data %>% filter(sentiment >0) %>% mutate(sentiment_label = "Positive")
comm_data %>% filter(sentiment == 0) %>% mutate(sentiment_label = "Neutral")
comm_data %>% filter(sentiment < 0) %>% mutate(sentiment_label = "Negative")
comm_data %>%
mutate(sentiment_label = if_else(sentiment>0, "Positive", "Negative"))
print(n =)
print(n = 1000)
comm_data %>%
mutate(sentiment_label = if_else(sentiment>0, "Positive", "Negative", "Neutral"))
comm_data %>%
mutate(message_impact = nchar(message)*sentiment) %>%
arrange(desc(message_impact))
comm_data %>% nchar(message)
comm_data %>% mutate(length = nchar(message))
comm_data %>%
group_by(date) %>%
summarise(total_char = sum(nchar(message))) %>%
arrange(desc(total_char))
comm_data %>% summarise(total_char = sum(nchar(message)))
knitr::opts_chunk$set(echo = TRUE)
# Enter code here
comm_data %>%
group_by(sender) %>%
count()
# Enter code here
library(tidyverse)
comm_data <- read_csv("CommQuest2023_Larger.csv")
# Enter code here
comm_data %>%
group_by(sender) %>%
count()
# Enter code here
comm_data %>%
group_by(channel) %>%
count()
# Enter code here
comm_data %>%
filter(
date == "2023-08-02",
channel == "Twitter"
) %>%
select(date, channel, message)
# Enter code here
comm_data %>%
distinct(sender)
# Enter code here
comm_data %>%
group_by(sender) %>%
count()
# Enter code here
comm_data %>%
group_by(channel) %>%
count()
# Enter code here
comm_data %>%
group_by(sender) %>%
filter(sentiment > 0) %>%
summarise(mean_sentiment = mean(sentiment)) %>%
select(sender, mean_sentiment) %>%
arrange(desc(mean_sentiment)) %>%
slice(1:3)
# Enter code here
comm_data %>%
group_by(sender) %>%
filter(sentiment > 0) %>%
summarise(mean_sentiment = mean(sentiment)) %>%
select(sender, mean_sentiment) %>%
arrange(desc(mean_sentiment))
# Enter code here
comm_data %>%
group_by(sender) %>%
filter(sentiment > 0) %>%
summarise(mean_sentiment = mean(sentiment)) %>%
select(sender, mean_sentiment) %>%
arrange(desc(mean_sentiment)) %>%
slice(1:3)
# Enter code here
comm_data %>%
group_by(sender) %>%
filter(sentiment > 0) %>%
summarise(mean_sentiment = mean(sentiment)) %>%
select(sender, mean_sentiment) %>%
arrange(desc(mean_sentiment)) %>%
slice(1:3)
# Enter code here
comm_data %>%
group_by(sender) %>%
filter(sentiment > 0) %>%
summarise(mean_sentiment = mean(sentiment)) %>%
select(sender, mean_sentiment) %>%
arrange(desc(mean_sentiment)) %>%
slice(1:3)
# Enter code here
comm_data %>%
group_by(sender) %>%
filter(sentiment > 0) %>%
summarise(mean_sentiment = mean(sentiment)) %>%
arrange(desc(mean_sentiment)) %>%
slice(1:3)
# Enter code here
comm_data %>%
group_by(sender) %>%
filter(sentiment > 0) %>%
summarise(mean_sentiment = mean(sentiment)) %>%
select(sender, mean_sentiment) %>%
arrange(desc(mean_sentiment)) %>%
slice(1:3)
# Enter code here
comm_data %>%
group_by(date) %>%
summarise(mean_sentiment = mean(sentiment)) %>%
arrange(date)
# Enter code here
comm_data %>%
group_by(sender) %>%
filter(sentiment > 0) %>%
summarise(mean_sentiment = mean(sentiment)) %>%
select(sender, mean_sentiment, date) %>%
arrange(desc(mean_sentiment)) %>%
slice(1:3)
# Enter code here
comm_data %>%
group_by(sender) %>%
filter(sentiment > 0) %>%
summarise(mean_sentiment = mean(sentiment)) %>%
select(sender, mean_sentiment) %>%
arrange(desc(mean_sentiment)) %>%
slice(1:3)
# Enter code here
comm_data %>%
group_by(sender) %>%
filter(sentiment > 0) %>%
summarise(mean_sentiment = mean(sentiment)) %>%
select(sender, mean_sentiment, sentiment) %>%
arrange(desc(mean_sentiment)) %>%
slice(1:3)
# Enter code here
comm_data %>%
group_by(sender) %>%
filter(sentiment > 0) %>%
summarise(mean_sentiment = mean(sentiment)) %>%
select(sender, sentiment) %>%
arrange(desc(mean_sentiment)) %>%
slice(1:3)
# Enter code here
comm_data %>%
group_by(sender) %>%
filter(sentiment > 0) %>%
summarise(mean_sentiment = mean(sentiment)) %>%
select(sender, mean_sentiment) %>%
arrange(desc(mean_sentiment)) %>%
slice(1:3)
# Enter code here
comm_data %>%
filter(sentiment < 0) %>%
select(message, sentiment)
# Enter code here
comm_data %>%
mutate(sentiment_label = if_else(sentiment>0, "Positive", "Negative", "Neutral"))
?sign
?mutate
?factor
# Enter code here
comm_data %>%
mutate(message_impact = nchar(message)*sentiment) %>%
arrange(desc(message_impact))
# Enter code here
comm_data %>%
group_by(date) %>%
summarise(total_char = sum(nchar(message))) %>%
arrange(desc(total_char))
?case_when
# Enter code here
# comm_data %>%
#   mutate(sentiment_label = if_else(sentiment>0, "Positive", "Negative", "Neutral"))
comm_data %>%
mutate(sentiment_label = case_when(sentiment>0 ~ "Positive", sentiment==0 ~ "Neutral", sentiment<0 ~ "Negative"))
# Enter code here
comm_data %>%
group_by(sender) %>%
filter(sentiment > 0) %>%
summarise(mean_sentiment = mean(sentiment)) %>%
select(sender, mean_sentiment) %>%
arrange(desc(mean_sentiment))
# Enter code here
comm_data %>%
filter(sentiment < 0) %>%
select(message, sentiment)
# Enter code here
comm_data %>%
group_by(date) %>%
summarise(total_char = sum(nchar(message))) %>%
arrange(desc(total_char)) %>%
slice(1)
