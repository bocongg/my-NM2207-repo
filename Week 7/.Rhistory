y = bill_length_mm,
size = body_mass_g,
alpha = flipper_length_mm) +
geom_point()
# Setting
ggplot(penguins) +
aes(x = bill_depth_mm,
y = bill_length_mm) +
geom_point(size = 2, alpha = 0.5)
# Facet 1
ggplot(penguins) +
aes(x = bill_depth_mm,
y = bill_length_mm) +
geom_point() +
facet_grid(species ~ island) # species along the rows, island along the columns
# Facet 2
ggplot(penguins) +
aes(x = bill_depth_mm,
y = bill_length_mm) +
geom_point() +
facet_grid(species ~ sex) # NA means certain obs with gender not tabulated
# Facet 3
ggplot(penguins) +
aes(x = bill_depth_mm,
y = bill_length_mm) +
geom_point() +
facet_grid(sex ~ species)
# Facet 4
ggplot(penguins) +
aes(x = bill_depth_mm,
y = bill_length_mm) +
geom_point() +
facet_wrap(~ species) # only sort by 1 variable
# Facet 5
ggplot(penguins) +
aes(x = bill_depth_mm,
y = bill_length_mm) +
geom_point() +
facet_wrap(~ species, ncol = 2)
# Facet 6
ggplot(penguins) +
aes(x = bill_depth_mm,
y = bill_length_mm) +
geom_point() +
facet_grid(. ~ species) # grid needs variable for row & column, use '.' if don't want to specify one of them
# Facet & Colour
ggplot(penguins) +
aes(x = bill_depth_mm,
y = bill_length_mm,
colour = species) +
geom_point() +
facet_grid(species ~ sex) +
scale_colour_viridis_d()
# Facet & Colour, no legend
ggplot(penguins) +
aes(x = bill_depth_mm,
y = bill_length_mm,
colour = species) +
geom_point() +
facet_grid(species ~ sex) +
scale_color_viridis_d() +
guides(color = "none")
library(openintro)
glimpse(loans_full_schema)
loans <- loans_full_schema %>%
select(loan_amount, interest_rate, term, grade,
state, annual_income, homeownership, debt_to_income)
glimpse(loans)
ggplot(loans) + aes(x = loan_amount) +
geom_histogram() # to know how many times a certain value appears in a variable or in a distribution (frequency of value)
# binwidth = 1000
ggplot(loans) + aes(x = loan_amount) +
geom_histogram(binwidth = 1000)
# binwidth = 5000
ggplot(loans) + aes(x = loan_amount) +
geom_histogram(binwidth = 5000)
# binwidth = 20000
ggplot(loans) + aes(x = loan_amount) +
geom_histogram(binwidth = 20000)
ggplot(loans) +
aes(x = loan_amount) +
geom_histogram(binwidth = 5000) +
labs(x = "Loan amount ($)",
y = "Frequency",
title = "Amounts of Lending Club loans")
# Fill with categorical variable
ggplot(loans) +
aes(x = loan_amount,
fill = homeownership) +
geom_histogram(binwidth = 5000,
alpha = 0.5) +
labs(x = "Loan amount ($)",
y = "Frequency",
title = "Amounts of Lending Club loans")
# Facet with categorical variable
ggplot(loans) +
aes(x = loan_amount,
fill = homeownership) +
geom_histogram(binwidth = 5000) +
labs(x = "Loan amount ($)",
y = "Frequency",
title = "Amounts of Lending Club loans") +
facet_wrap(~ homeownership, nrow = 3)
ggplot(loans) + aes(x = loan_amount) +
geom_density() # just like histograms but represented by smooth curves instead; gives probability density of data in each range instead of count (no. of times values in certain range occur over total no. of values in the variable)
ggplot(loans) + aes(x = loan_amount) +
geom_density(adjust = 0.5)
ggplot(loans) + aes(x = loan_amount) +
geom_density(adjust = 1) # default bandwidth
ggplot(loans) + aes(x = loan_amount) +
geom_density(adjust = 2)
ggplot(loans) + aes(x = loan_amount) +
geom_density(adjust = 2) +
labs(x = "Loan amount ($)",
y = "Density",
title = "Amounts of Lending Club loans")
# Add categorical variable
ggplot(loans) + aes(x = loan_amount,
fill = homeownership) +
geom_density(adjust = 2,
alpha = 0.5) +
labs(x = "Loan amount ($)",
y = "Density",
title = "Amounts of Lending Club loans",
fill = "Homeownership")
ggplot(loans) + aes(x = interest_rate) +
geom_boxplot() # vertical line in the middle = median, boundaries = IQR, dots outside = outliers, tips of horizontal line = min & max
ggplot(loans) + aes(x = annual_income) +
geom_boxplot()
ggplot(loans) + aes(x = interest_rate) +
geom_boxplot() +
labs(x = "Interest rate (%)",
y = NULL,
title = "Interest rates of Lending Club loans") +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank())
# adding categoric variable
ggplot(loans) + aes(x = interest_rate,
y = grade) +
geom_boxplot() +
labs(x = "Interest rate (%)",
y = "Grade",
title = "Interest rates of Lending Club loans",
subtitle = "by grade of loan")
ggplot(loans) + aes(x = debt_to_income,
y = interest_rate) +
geom_point() # but too concentrated on the left
ggplot(loans) + aes(x = debt_to_income,
y = interest_rate) +
geom_hex() # similar to histogram;
ggplot(loans %>% filter(debt_to_income < 100)) + aes(x = debt_to_income,
y = interest_rate) +
geom_hex()
ggplot(loans) + aes(x = homeownership) +
geom_bar()
ggplot(loans %>% filter(debt_to_income < 100)) + aes(x = debt_to_income,
y = interest_rate) +
geom_hex()
ggplot(loans) + aes(x = homeownership) +
geom_bar()
# segmented bar plot
ggplot(loans) + aes(x = homeownership,
fill = grade) +
geom_bar()
# segmented bar plot
ggplot(loans) + aes(x = homeownership,
fill = grade) +
geom_bar(position = fill)
# segmented bar plot
ggplot(loans) + aes(x = homeownership,
fill = grade) +
geom_bar(position = "fill")
# segmented bar plot
ggplot(loans) + aes(x = homeownership,
fill = grade) +
geom_bar()
# customisation of bar plot
ggplot(loans) + aes(y = homeownership,
fill = grade) +
geom_bar(position = "fill") +
labs(x = "Proportion",
y = "Homeownership",
fill = "Grade",
title = "Grades of Lending Club loans",
subtitle = "and homeownership of lendee")
library(ggridges)
install.packages(ggridges)
library(ggridges)
library(ggridge)
install.packages(ggridges)
install.packages(ggridge)
library(ggplot)
library(ggplot2)
library(ggridges)
library(ggplot2)
library(ggridges)
install.packages(ggplot)
install.packages(ggplot2)
install.packages(ggplot)
install.packages(ggplot.ggridges)
install.packages(ggridges)
library(ggridges)
library(ggridges)
knitr::opts_chunk$set(echo = TRUE)
library(ggridges)
ggplot(loans) + aes(x = loan_amount,
y = grade,
fill = grade,
color = grade) +
geom_density_ridges(alpha = 0.5)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(palmerpenguins)
glimpse(penguins)
# Step 1
ggplot(data = penguins)
# Step 2
ggplot(data = penguins,
mapping = aes(x = bill_depth_mm))
# Step 3
ggplot(data = penguins,
mapping = aes(x = bill_depth_mm,
y = bill_length_mm))
# Step 4
ggplot(data = penguins,
mapping = aes(x = bill_depth_mm,
y = bill_length_mm)) +
geom_point()
# Step 5
ggplot(data = penguins,
mapping = aes(x = bill_depth_mm,
y = bill_length_mm,
colour = species)) +
geom_point()
# Step 6
ggplot(data = penguins,
mapping = aes(x = bill_depth_mm,
y = bill_length_mm,
colour = species)) +
geom_point() +
labs(title = "Bill depth and length")
# Step 7
ggplot(data = penguins,
mapping = aes(x = bill_depth_mm,
y = bill_length_mm,
colour = species)) +
geom_point() +
labs(title = "Bill depth and length",
subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo Penguins")
# Step 8
ggplot(data = penguins,
mapping = aes(x = bill_depth_mm,
y = bill_length_mm,
colour = species)) +
geom_point() +
labs(title = "Bill depth and length",
subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo Penguins",
x = "Bill depth (mm)",
y = "Bill length (mm)")
# Step 9
ggplot(data = penguins,
mapping = aes(x = bill_depth_mm,
y = bill_length_mm,
colour = species)) +
geom_point() +
labs(title = "Bill depth and length",
subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo Penguins",
x = "Bill depth (mm)",
y = "Bill length (mm)",
colour = "Species")
# Step 10
ggplot(data = penguins,
mapping = aes(x = bill_depth_mm,
y = bill_length_mm,
colour = species)) +
geom_point() +
labs(title = "Bill depth and length",
subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo Penguins",
x = "Bill depth (mm)",
y = "Bill length (mm)",
colour = "Species",
caption = "Source: Palmer Station LTER")
# Step 11
ggplot(data = penguins,
mapping = aes(x = bill_depth_mm,
y = bill_length_mm,
colour = species)) +
geom_point() +
labs(title = "Bill depth and length",
subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo Penguins",
x = "Bill depth (mm)",
y = "Bill length (mm)",
colour = "Species",
caption = "Source: Palmer Station LTER",
scale_colour_viridis_d())
ggplot(penguins,
aes(x = bill_depth_mm,
y = bill_length_mm,
colour = species)) +
geom_point() +
scale_colour_viridis_d()
ggplot(penguins) + # Data layer
aes(x = bill_depth_mm,
y = bill_length_mm,
colour = species) + # Aesthetics layer
geom_point() + # Geometric layer
scale_colour_viridis_d()
# Colour
ggplot(penguins) + aes(x = bill_depth_mm, y = bill_length_mm,
colour = species) +
geom_point() + scale_colour_viridis_d()
# Shape 1
ggplot(penguins) + aes(x = bill_depth_mm, y = bill_length_mm, colour = species,
shape = island) +
geom_point() + scale_colour_viridis_d()
# Shape 2
ggplot(penguins) + aes(x = bill_depth_mm, y = bill_length_mm, colour = species,
shape = species) +
geom_point() + scale_colour_viridis_d()
# Size
ggplot(penguins) + aes(x = bill_depth_mm, y = bill_length_mm, colour = species, shape = species,
size = body_mass_g) +
geom_point() + scale_colour_viridis_d()
# Alpha
ggplot(penguins) + aes(x = bill_depth_mm, y = bill_length_mm, colour = species, shape = species, size = body_mass_g,
alpha = flipper_length_mm) +
geom_point() + scale_colour_viridis_d()
# Mapping
ggplot(penguins) +
aes(x = bill_depth_mm,
y = bill_length_mm,
size = body_mass_g,
alpha = flipper_length_mm) +
geom_point()
# Setting
ggplot(penguins) +
aes(x = bill_depth_mm,
y = bill_length_mm) +
geom_point(size = 2, alpha = 0.5)
# Facet 1
ggplot(penguins) +
aes(x = bill_depth_mm,
y = bill_length_mm) +
geom_point() +
facet_grid(species ~ island) # species along the rows, island along the columns
# Facet 2
ggplot(penguins) +
aes(x = bill_depth_mm,
y = bill_length_mm) +
geom_point() +
facet_grid(species ~ sex) # NA means certain obs with gender not tabulated
# Facet 3
ggplot(penguins) +
aes(x = bill_depth_mm,
y = bill_length_mm) +
geom_point() +
facet_grid(sex ~ species)
# Facet 4
ggplot(penguins) +
aes(x = bill_depth_mm,
y = bill_length_mm) +
geom_point() +
facet_wrap(~ species) # only sort by 1 variable
# Facet 5
ggplot(penguins) +
aes(x = bill_depth_mm,
y = bill_length_mm) +
geom_point() +
facet_wrap(~ species, ncol = 2)
# Facet 6
ggplot(penguins) +
aes(x = bill_depth_mm,
y = bill_length_mm) +
geom_point() +
facet_grid(. ~ species) # grid needs variable for row & column, use '.' if don't want to specify one of them
# Facet & Colour
ggplot(penguins) +
aes(x = bill_depth_mm,
y = bill_length_mm,
colour = species) +
geom_point() +
facet_grid(species ~ sex) +
scale_colour_viridis_d()
# Facet & Colour, no legend
ggplot(penguins) +
aes(x = bill_depth_mm,
y = bill_length_mm,
colour = species) +
geom_point() +
facet_grid(species ~ sex) +
scale_color_viridis_d() +
guides(color = "none")
library(openintro)
glimpse(loans_full_schema)
loans <- loans_full_schema %>%
select(loan_amount, interest_rate, term, grade,
state, annual_income, homeownership, debt_to_income)
glimpse(loans)
ggplot(loans) + aes(x = loan_amount) +
geom_histogram() # to know how many times a certain value appears in a variable or in a distribution (frequency of value)
# binwidth = 1000
ggplot(loans) + aes(x = loan_amount) +
geom_histogram(binwidth = 1000)
# binwidth = 5000
ggplot(loans) + aes(x = loan_amount) +
geom_histogram(binwidth = 5000)
# binwidth = 20000
ggplot(loans) + aes(x = loan_amount) +
geom_histogram(binwidth = 20000)
ggplot(loans) +
aes(x = loan_amount) +
geom_histogram(binwidth = 5000) +
labs(x = "Loan amount ($)",
y = "Frequency",
title = "Amounts of Lending Club loans")
# Fill with categorical variable
ggplot(loans) +
aes(x = loan_amount,
fill = homeownership) +
geom_histogram(binwidth = 5000,
alpha = 0.5) +
labs(x = "Loan amount ($)",
y = "Frequency",
title = "Amounts of Lending Club loans")
# Facet with categorical variable
ggplot(loans) +
aes(x = loan_amount,
fill = homeownership) +
geom_histogram(binwidth = 5000) +
labs(x = "Loan amount ($)",
y = "Frequency",
title = "Amounts of Lending Club loans") +
facet_wrap(~ homeownership, nrow = 3)
ggplot(loans) + aes(x = loan_amount) +
geom_density() # just like histograms but represented by smooth curves instead; gives probability density of data in each range instead of count (no. of times values in certain range occur over total no. of values in the variable)
ggplot(loans) + aes(x = loan_amount) +
geom_density(adjust = 0.5)
ggplot(loans) + aes(x = loan_amount) +
geom_density(adjust = 1) # default bandwidth
ggplot(loans) + aes(x = loan_amount) +
geom_density(adjust = 2)
ggplot(loans) + aes(x = loan_amount) +
geom_density(adjust = 2) +
labs(x = "Loan amount ($)",
y = "Density",
title = "Amounts of Lending Club loans")
# Add categorical variable
ggplot(loans) + aes(x = loan_amount,
fill = homeownership) +
geom_density(adjust = 2,
alpha = 0.5) +
labs(x = "Loan amount ($)",
y = "Density",
title = "Amounts of Lending Club loans",
fill = "Homeownership")
ggplot(loans) + aes(x = interest_rate) +
geom_boxplot() # vertical line in the middle = median, boundaries = IQR, dots outside = outliers, tips of horizontal line = min & max
ggplot(loans) + aes(x = annual_income) +
geom_boxplot()
ggplot(loans) + aes(x = interest_rate) +
geom_boxplot() +
labs(x = "Interest rate (%)",
y = NULL,
title = "Interest rates of Lending Club loans") +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank())
# adding categoric variable
ggplot(loans) + aes(x = interest_rate,
y = grade) +
geom_boxplot() +
labs(x = "Interest rate (%)",
y = "Grade",
title = "Interest rates of Lending Club loans",
subtitle = "by grade of loan")
ggplot(loans) + aes(x = debt_to_income,
y = interest_rate) +
geom_point() # but too concentrated on the left
ggplot(loans) + aes(x = debt_to_income,
y = interest_rate) +
geom_hex() # similar to histogram;
ggplot(loans %>% filter(debt_to_income < 100)) + aes(x = debt_to_income,
y = interest_rate) +
geom_hex()
ggplot(loans) + aes(x = homeownership) +
geom_bar()
# segmented bar plot
ggplot(loans) + aes(x = homeownership,
fill = grade) +
geom_bar()
# segmented bar plot
ggplot(loans) + aes(x = homeownership,
fill = grade) +
geom_bar(position = "fill")
# customisation of bar plot
ggplot(loans) + aes(y = homeownership,
fill = grade) +
geom_bar(position = "fill") +
labs(x = "Proportion",
y = "Homeownership",
fill = "Grade",
title = "Grades of Lending Club loans",
subtitle = "and homeownership of lendee")
ggplot(loans) + aes(x = homeownership,
y = loan_amount) +
geom_violin()
library(ggridges)
ggplot(loans) + aes(x = loan_amount,
y = grade,
fill = grade,
color = grade) +
geom_density_ridges(alpha = 0.5)
setwd("C:/Users/bcong/Desktop/Uni Materials/NM2207 Computational Media Literacy/Week 7")
